### Filter CpG methylation data (after bismark alignment) then perform PCA

# Directory containing final filtered coverage files
# Each file is a tab-delimited table of CpG sites with methylation calls
input_dir <- "/rhome/wcoll010/shared/Project_PNAZ_Nova723P_Zafar/epigen/ucdavis/coverage_files_R_script/filtered_cov_files/"

# List all filtered coverage files to include in the PCA
# Pattern ensures we only select files beginning with "filtered_" and ending with ".bismark.cov.gz"
files <- list.files(input_dir, pattern = "^filtered_.*\\.bismark\\.cov\\.gz$", full.names = TRUE)


#-------------------------------------------------------
## Read and prepare methylation percentage data

data_list <- list()

for (file in files) {
  # Extract sample name from file name (remove prefix and suffix)
  sample_name <- gsub("^filtered_|\\.bismark\\.cov\\.gz$", "", basename(file))
  
  # Read coverage file: scaffold, start, stop, methylation %, methylated reads, unmethylated reads
  data <- read.table(file, header = FALSE, sep = "\t", stringsAsFactors = FALSE)
  colnames(data) <- c("scaffold", "start", "stop", "methylation_percent",
                      "methylated_reads", "unmethylated_reads")
  
  # Keep only scaffold, position, and methylation percentage
  data <- data[, c("scaffold", "start", "methylation_percent")]
  
  # Rename methylation column to the sample name (for later merging)
  colnames(data)[3] <- sample_name
  
  # Store each sampleâ€™s data frame in a list for merging
  data_list[[sample_name]] <- data
}

# Merge all sample data frames by scaffold and start position to create a single matrix
merged_data <- Reduce(function(x, y) merge(x, y, by = c("scaffold", "start"), all = TRUE), data_list)

# Convert methylation percentages to a numeric matrix (remove scaffold and start columns)
meth_matrix <- as.matrix(merged_data[, -c(1,2)])

# Remove CpG rows with any missing values across samples
meth_matrix_final <- na.omit(meth_matrix)



### Filter for variable CpG sites

# Calculate variance across samples for each CpG site
row_variance <- apply(meth_matrix_final, 1, var)

# Keep only sites with non-zero variance (informative for PCA)
meth_matrix_filtered <- meth_matrix_final[row_variance != 0, ]




#--------------------------------------------
### Perform Principal Component Analysis (PCA)

# Transpose matrix so that rows = samples, columns = CpG sites
# Center and scale so all CpG sites contribute equally
pca_result <- prcomp(t(meth_matrix_filtered), center = TRUE, scale. = TRUE)

# Calculate percentage of variance explained by the first two PCs
percent_var <- (pca_result$sdev^2 / sum(pca_result$sdev^2)) * 100
pc1_var <- round(percent_var[1], 2)
pc2_var <- round(percent_var[2], 2)

# Create a data frame of PCA scores for plotting
pca_df <- as.data.frame(pca_result$x)
pca_df$Sample <- rownames(pca_df)

# Assign treatment group labels based on sample name patterns
pca_df$Group <- factor(ifelse(grepl("^S4_", pca_df$Sample), "GS04",
                       ifelse(grepl("^PE", pca_df$Sample), "G0_Cabb33(egg)",
                       ifelse(grepl("^PA", pca_df$Sample), "G0_Cabb33(adult)",
                       ifelse(grepl("^11_", pca_df$Sample), "G1103",
                       ifelse(grepl("^14_", pca_df$Sample), "G101_14",
                       ifelse(grepl("^G1_", pca_df$Sample), "G1_Cabb33",
                       ifelse(grepl("^9R_", pca_df$Sample), "G99R", "Other"))))))))



#-------------------------------------
### Plot the PCA
 
# Choose color scheme for the treatment groups
my_colors <- brewer.pal(7, "Dark2")

# Generate PCA scatter plot of PC1 vs PC2
pca_plot <- ggplot(pca_df, aes(x = PC1, y = PC2, color = Group)) +
  geom_point(size = 4) +
  scale_color_manual(values = my_colors) +
  labs(title = "PCA of Methylation Data",
       x = paste0("PC1 (", pc1_var, "% variance)"),
       y = paste0("PC2 (", pc2_var, "% variance)")) +
  theme_minimal()

# Save PCA plot to a PDF file
ggsave("PCA_methylation_plot.pdf", pca_plot, width = 5, height = 4)

